import numpy as np
import matplotlib.pyplot as plt

data = {

0.6: [25.95141,26.17755,23.40992,26.41149,26.51679],
0.7: [32.97768,36.20236,28.38546,30.67060,33.40361,35.89962,35.56967,31.96999,30.62305,36.18226,35.45029],
0.8: [34.84864,36.18968,39.09708,49.45565,34.94712,42.99327,44.89150,46.89384,42.45535,43.16422,35.42797,42.38324,33.83532],
0.9: [38.07359,39.66930,49.94286,36.27175,53.23553,55.17627,50.10236,45.37721,37.55431,46.56713,44.14244],
# 1.0: [53.84307,60.91741,50.69644,63.59478,59.38369,62.27661,64.79288,62.39118,60.03241,65.42853,63.37032,67.04660,61.09865,47.58555],
1.1: [45.76941,59.86636,42.66859,57.67258,46.51840,40.03535,59.51275,68.62173,70.04367,60.00582,52.95864,59.73973,60.04696,59.86037,66.54311,60.77555],
1.2: [63.06950,47.63120,60.97842,82.88290,75.55173,55.15262,51.70808,48.48036,65.49922,49.27534,77.00655,50.75038,62.53867]

}




def best_fit(data):
    # Compute average velocity for each key
    avg = {key: np.mean(data[key]) for key in data}


    # Fit a line to the data
    x = np.array(list(avg.keys()))
    y = np.array(list(avg.values()))

    # Add zero and zero
    x = np.append(x, 0)
    y = np.append(y, 0)

    m, b = np.polyfit(x, y, 1)

    print(f'Best fit line: y = {m}x + {b}')

    # Plot data and best fit line
    plt.scatter(x, y)
    plt.plot(x, m*x + b, color='red')
    plt.xlabel('Time (s)')

    plt.ylabel('Average Velocity (m/s)')
    plt.show()


if __name__ == '__main__':
    best_fit(data)